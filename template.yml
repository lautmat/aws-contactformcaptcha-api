AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SENDEREMAIL:
    Type: String
  RECEIVEREMAIL:
    Type: String    
  RECAPTCHASECRETKEY:
    Type: String
Resources:
  ContactFormFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ContactFormFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: whatever
        S3Key: whatever
      Environment:
          Variables: 
            SENDEREMAIL : !Ref SENDEREMAIL
            RECEIVEREMAIL : !Ref RECEIVEREMAIL
            RECAPTCHASECRETKEY : !Ref RECAPTCHASECRETKEY
      Description: A Lambda function for the contact form
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      MemorySize: 128
      Handler: src/handlers/index.handler
      Role: !GetAtt 
        - ContactFormFunctionRole
        - Arn
      Timeout: 60
      Runtime: nodejs10.x
    DependsOn:
      - ContactFormFunctionRole
  ContactFormAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: ContactFormAPI
  ContactFormAPIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ContactFormAPI.RootResourceId
      PathPart: contactform
      RestApiId: !Ref ContactFormAPI
  ContactFormAPIPostMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref ContactFormAPIResource
      RestApiId: !Ref ContactFormAPI
      Integration:
        Credentials: !GetAtt ContactFormAPIRole.Arn
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - ResponseTemplates: {"application/json": ""}
            StatusCode: 200
            ResponseParameters:
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS
        Uri: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations'
          - lambdaArn: !GetAtt "ContactFormFunction.Arn"
      MethodResponses: 
        - ResponseModels: 
            application/json : 'Empty'
          ResponseParameters: 
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true
          StatusCode: 200  
      OperationName: 'POST contactform message'
  ContactFormAPIOptionsMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS 
      ResourceId: !Ref ContactFormAPIResource
      RestApiId: !Ref ContactFormAPI
      Integration:
          Type: MOCK
          IntegrationResponses:
            - ResponseParameters:
                method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
                method.response.header.Access-Control-Allow-Origin: "'*'"
              ResponseTemplates:
                application/json: ''
              StatusCode: '200'
          PassthroughBehavior: NEVER
          RequestTemplates:
            application/json: '{"statusCode": 200}'
      MethodResponses:
          - ResponseModels:
              application/json: Empty
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: true
              method.response.header.Access-Control-Allow-Methods: true
              method.response.header.Access-Control-Allow-Origin: true
            StatusCode: '200'
  ContactFormAPIModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref ContactFormAPI
      Schema: {}  
  ContactFormAPIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: 
      - ContactFormAPIPostMethod
      - ContactFormAPIOptionsMethod  
    Properties:
      Description: Lambda API Deployment
      RestApiId: !Ref ContactFormAPI  
  ContactFormAPIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ContactFormAPIDeployment
      Description: Lambda API Stage
      RestApiId: !Ref ContactFormAPI
      StageName: stage1  
  ContactFormAPIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: 'Allow'
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'  
  ApiGatewayPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "ContactFormLambdaAccess"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: 'Allow'
          Action: 'lambda:*'
          Resource: !GetAtt ContactFormFunction.Arn
      Roles: 
      - 
        !Ref ContactFormAPIRole  
  ContactFormFunctionPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: ContactFormFunctionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ses:SendEmail'
              - 'ses:SendRawEmail'
            Resource: 'arn:aws:ses:*:*:identity/*'
      Roles:
        - !Ref ContactFormFunctionRole
  ContactFormFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt "ContactFormFunction.Arn"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ContactFormAPI}/*/POST/contactform
Outputs:
  ContactFormAPI:
    Description: "API Gateway endpoint URL for Prod stage for Get Details Function"
    Value: !Sub "https://${ContactFormAPI}.execute-api.${AWS::Region}.amazonaws.com/stage1/contactform"